#!/usr/bin/env perl
use Mojolicious::Lite;

use Geo::Calc;

plugin 'Config';

app->config('apikey') or die "apikey not defined";

get '/#lat/#lon' => sub {
  my $c = shift;
  my $gc = Geo::Calc->new(lat=>$c->param('lat'), lon=>$c->param('lon'), units=>$c->param('units')||'mi');
  my $box = $gc->boundry_box(($c->param('box')||1)/2);
  $c->app->log->info(sprintf("Big box: %s, %s -> %s, %s", $box->{lat_min}, $box->{lon_min}, $box->{lat_max}, $box->{lon_max}));
  $c->render('index', box => $box);
};

app->start;
__DATA__

@@ index.html.ep
<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Rectangles</title>
    <style>
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px
      }
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
    <script>
// This example adds a red rectangle to a map.

function initialize() {
  var map = new google.maps.Map(document.getElementById('map-canvas'), {
    zoom: 11,
    center: new google.maps.LatLng(<%= param 'lat' %>, <%= param 'lon' %>),                                          
    mapTypeId: google.maps.MapTypeId.TERRAIN
  });

  var rectangle = new google.maps.Rectangle({
    strokeColor: '#FF0000',
    strokeOpacity: 0.8,
    strokeWeight: 2,
    fillColor: '#FF0000',
    fillOpacity: 0.35,
    map: map,
    bounds: new google.maps.LatLngBounds(
      new google.maps.LatLng(<%= $box->{lat_min} %>, <%= $box->{lon_min} %>),                                          
      new google.maps.LatLng(<%= $box->{lat_max} %>, <%= $box->{lon_max} %>))                                          
  });

  % my $gc1;
  % my $lat = $box->{lat_min};
  % my $lon = $box->{lon_min};
  % while ( $lon < $box->{lon_max} ) {
  %   while ( $lat < $box->{lat_max} ) {
  %     $gc1 = Geo::Calc->new(lat=>$lat, lon=>$lon, units=>'mi');
  %     my $box1 = $gc1->destination_point(45, 1.414213562);
  %     $c->app->log->info(sprintf("Small box: %s, %s -> %s, %s", $lat, $lon, $box1->{lat}, $box1->{lon}));
  new google.maps.Rectangle({
    strokeColor: '#00FF00',
    strokeOpacity: 0.8,
    strokeWeight: 1,   
    fillColor: '#00FF00',
    fillOpacity: 0.35,   
    map: map,
    bounds: new google.maps.LatLngBounds(
      new google.maps.LatLng(<%= $lat %>, <%= $lon %>),
      new google.maps.LatLng(<%= $box1->{lat} %>, <%= $box1->{lon} %>))
  });
  %     $c->ua->get("https://www.strava.com/api/v3/segments/explore" => {'Authorization' => 'Bearer '.$c->config('apikey')} => form => {bounds => "$lat,$lon,$box1->{lat},$box1->{lon}"} => sub {
  %       my ($ua, $tx) = @_;
  %       my $json = $tx->res->json;
  %       #$c->app->log->info(sprintf("%s", Data::Dumper::Dumper $json));
  %       foreach my $segment ( @{$json->{segments}} ) {
  %         $c->app->log->info("Segment ID: $segment->{id}");
  %         $c->ua->get("http://localhost:5984/better-segment-explorer/$segment->{id}" => sub {
  %           my ($ua, $tx) = @_;
  %           #$c->app->log->info(sprintf("%s", Data::Dumper::Dumper $tx->res->json));
  %           $c->ua->put("http://localhost:5984/better-segment-explorer/$segment->{id}" => json => $segment);
  %         });
  %       }
  %     });
  %     $lat = $gc1->destination_point(0, 1, -6)->{lat};
  %     $c->app->log->info(sprintf("  Next lat: %s", $lat));
  %   }
  %   $lat = $box->{lat_min};
  %   $lon = $gc1->destination_point(90, 1, -6)->{lon};
  %   $c->app->log->info(sprintf("  Next lon: %s", $lon));
  % }
}

google.maps.event.addDomListener(window, 'load', initialize);

    </script>
  </head>
  <body>
    <div id="map-canvas"></div>
  </body>
</html>
